{"version":3,"sources":["Components/Header/Header.js","Components/Formulario/Formulario.js","Components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","console","log","datosConsulta","onSubmit","this","id","type","ref","htmlFor","defaultValue","Component","App","state","error","setState","Components_Header_Header","Formulario_Formulario","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e95594d.chunk.js","sourcesContent":["import React from 'react';\r\n// rsc\r\nconst Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"nav-wrapper light-blue darken-2\">\r\n             <a className=\"brand-logo\">{props.titulo}</a>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nexport default class Formulario extends Component {\r\n\r\n    // crear los refs\r\n\r\n    ciudadRef = React.createRef();\r\n    paisRef = React.createRef();\r\n\r\n    buscarClima = (e) =>{\r\n            e.preventDefault();\r\n\r\n        // leer los ref y crear el objeto...\r\n\r\n        const respuesta ={\r\n            ciudad : this.ciudadRef.current.value,\r\n            pais   : this.paisRef.current.value\r\n        }\r\n\r\n        console.log(\"Respuesta objeto : \",respuesta);\r\n        \r\n        //enviar por props\r\n        this.props.datosConsulta(respuesta);\r\n      \r\n        // this.props.datosConsulta(respuesta)\r\n         \r\n        // console.log(\"Enviar por props\",datosConsulta);\r\n        \r\n\r\n        //opcional rsetear el form\r\n\r\n\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contenedor-form\">\r\n        <div className=\"container\">\r\n         <div className=\"row\">\r\n          <form onSubmit={this.buscarClima}>\r\n              <div className=\"input-field col s12 m8 l4  offset-m2\">\r\n                <input id=\"ciudad\" type=\"text\" ref={this.ciudadRef}  />\r\n                <label htmlFor=\"ciudad\">Ciudad</label>\r\n               \r\n              </div>\r\n              <div className=\"input-field col s12 m8 l4  offset-m2\">\r\n                <select ref={this.paisRef}>\r\n                  <option value=\"\" defaultValue >Elije un País</option>\r\n                  <option value=\"AR\">Argentina</option>\r\n                  <option value=\"CO\">Colombia</option>\r\n                  <option value=\"CR\">Costa Rica</option>\r\n                  <option value=\"ES\">España</option>\r\n                  <option value=\"US\">Estados Unidos</option>\r\n                  <option value=\"MX\">México</option>\r\n                  <option value=\"PE\">Perú</option>\r\n                  <option value=\"GA\">Gran Bretaña</option>\r\n                  <option value=\"CA\">Canada</option>\r\n                  <option value=\"IT\">Italia</option>\r\n                  <option value=\"EC\">Ecuador</option>\r\n                  <option value=\"PL\">Polonia</option>\r\n                  <option value=\"NG\">Nigeria</option>\r\n                  <option value=\"CU\">Cuba</option>\r\n                  <option value=\"AF\">Afganistan</option>\r\n                </select>\r\n                <label htmlFor=\"pais\">País</label>\r\n              </div>\r\n              <div className=\"input-field col s12 m8 l4  offset-m2 buscador\">\r\n               <input type=\"submit\" className=\"waves-effect waves-light btn-large yellow accent-4\" value=\"Buscar ...\" />\r\n              </div>\r\n          </form>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport Form from './Formulario/Formulario';\n\n\nclass App extends Component {\n\n      state = {\n        error: ''\n      }\n      \n      componentDidMount(){\n        this.setState({\n          error:false\n        })\n      }\n\n\n    datosConsulta = respuesta =>{\n\n      if(respuesta.ciudad === '' || respuesta.pais === ''){\n        this.setState({\n          error:true\n        })\n        \n      }else{\n\n        console.log(respuesta);\n      }\n\n      \n\n    }\n\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header titulo=\"Clima \" />\n        <Form \n          datosConsulta = {this.datosConsulta}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}